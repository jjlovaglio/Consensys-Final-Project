
DONE: implement ownable design pattern from OZ
DONE: edit design_pattern_decisions.md
DONE: edit avoiding_common_attacks.md

DONE: build 5 tests for existing mvp

DONE: incorporate heroku express front to project
DONE: test heroku deployment after incorporation

DONE: read vineyard from deployed contract

DONE: iterate front end:
        allow user to submit a transaction via de BUY button to update smart contract

DONE: update struct & UI to reflect change of state after purchase
DONE: implement notifications

IDEA: brainstorm onlyVineOwners functionality 
        e.g. can visit the property
        e.g. can have wines sent to them

DONE: implement require() & modifier methods
        understand how to catch errors when using them

DONE: get feedback to front end after tx to the blockchain

DONE: update the frontend if tx is successful or not

DONE: convert wei to ether via web3.js

TODO: add project introduction in html
TODO: add vineyard photo

TODO: redo tests
TODO: add commented specs

TODO: implement putVineForSale functionality
        add a vineOwner's list // tracks owners?
        add a vineOwner to vineId mapping // tracks vines to owners
        fetch how many vines the connected owner has
        enable a button to put vine for sale for each owned vine

TODO: review requirements

TODO: deploy final contract to rinkeby
TODO: edit deployed_address.txt 
TODO: create screencast with facetime on osx

TODO: edit README
        create instructions for installing dependencies
        create instructions for accessing a server
        create instructions for running unit tests

TODO: submit project



