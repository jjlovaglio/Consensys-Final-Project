// truffle development environment
truffle develop

// contract reference
let instance = await <contract name>.deployed()

// returns a promise
let response = await instance.<function name>();

nota: is pones await, devuelve el big number. 
      si no pones await, de devuelve la promesa

// unpacks a uint256
response.toString();

// unpacks a promise
response.then((r) => console.log(r))

// accounts reference
let accounts = await web3.eth.getAccounts()
truffle(develop)> instance.sendCoin(accounts[1], 10, {from: accounts[0]})

// deploy command to rinkeby testnet
truffle migrate --reset --network rinkeby

// interact with rinkeby testnet via truffle console
truffle console --network rinkeby


Debugging
################

en una terminal aparte: 
$ truffle develop --log

en otra terminal
truffle test

ver el id del contrato en ventana 1 
en ventana 2:
$ truffle debug <contract id>

add breakpoints and watches



Express + Heroku Project
################

// to run express locally
$ node app.js

// to deploy from development branch
$ git push heroku express-heroku-integration:main

$ heroku logs --tail

